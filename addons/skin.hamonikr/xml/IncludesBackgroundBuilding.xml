<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="BackgroundVar">
		<!-- extrafanart background -->
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + Skin.HasSetting(SkinHelper.EnableExtraFanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)]</value>
		<!-- normal fanart background -->
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(Container.Art(albumartist.fanart))">$INFO[Container.Art(albumartist.fanart)]</value>
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(ListItem.Property(Fanart))">$INFO[ListItem.Property(Fanart)]</value>
		<value condition="!Skin.HasSetting(HideBackGroundFanart) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
		<value condition="Control.HasFocus(9901) + !String.IsEmpty(Container(9901).ListItem.Property(background))">$INFO[Container(9901).ListItem.Property(background)]</value>
		<value condition="!String.IsEmpty(Container(9000).ListItem.Property(background))">$INFO[Container(9000).ListItem.Property(background)]</value>
		<value condition="!Window.IsActive(Home) + !String.IsEmpty(Skin.String(SkinShortcut.BackgroundPath))">$INFO[Skin.String(SkinShortcut.BackgroundPath)]</value>
		<value condition="Skin.HasSetting(UseCustomBackground) + Skin.String(CustomBackgroundPath)">$INFO[Skin.String(CustomBackgroundPath)]</value>
		<!-- global background -->
		<value>$INFO[Skin.CurrentTheme,special://skin/extras/backgrounds/,.jpg]</value>
	</variable>
	<include name="RandomizeImages">
		<randomize>true</randomize>
	</include>
	<include name="fanartSpeed5">
		<timeperimage>5000</timeperimage>
	</include>
	<include name="fanartSpeed6">
		<timeperimage>6000</timeperimage>
	</include>
	<include name="fanartSpeed8">
		<timeperimage>8000</timeperimage>
	</include>
	<include name="fanartSpeed10">
		<timeperimage>10000</timeperimage>
	</include>
	<include name="fanartSpeed15">
		<timeperimage>15000</timeperimage>
	</include>
	<include name="fanartSpeed20">
		<timeperimage>20000</timeperimage>
	</include>
	<include name="fanartSpeed30">
		<timeperimage>30000</timeperimage>
	</include>
	<include name="fanartSpeed60">
		<timeperimage>60000</timeperimage>
	</include>
	<include name="fanartSpeed">
		<include condition="skin.string(BackgroundSwitchDelay, 6)">fanartSpeed6</include>
		<include condition="skin.string(BackgroundSwitchDelay, 5)">fanartSpeed5</include>
		<include condition="skin.string(BackgroundSwitchDelay, 8)">fanartSpeed8</include>
		<include condition="skin.string(BackgroundSwitchDelay, 10)">fanartSpeed10</include>
		<include condition="skin.string(BackgroundSwitchDelay, 15)">fanartSpeed15</include>
		<include condition="skin.string(BackgroundSwitchDelay, 20)">fanartSpeed20</include>
		<include condition="skin.string(BackgroundSwitchDelay, 30)">fanartSpeed30</include>
		<include condition="skin.string(BackgroundSwitchDelay, 60)">fanartSpeed60</include>
		<include condition="!skin.string(BackgroundSwitchDelay)">fanartSpeed30</include>
	</include>
	<variable name="fanartBackground">
		<value condition="Container.Scrolling"></value>
		<!-- normal fanart backgrounds -->
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(tvshow.fanart))">$INFO[Container.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(artist.fanart))">$INFO[Container.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(albumartist.fanart))">$INFO[Container.Art(albumartist.fanart)]</value>
	</variable>
	<include name="CommonBackground">
		<!-- global background -->
		<control type="multiimage">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<imagepath background="true" fallback="special://skin/extras/backgrounds/SKINDEFAULT.jpg">$VAR[BackgroundVar]</imagepath>
			<aspectratio>scale</aspectratio>
			<fadetime>450</fadetime>
			<loop>yes</loop>
			<include>fanartSpeed</include>
			<include condition="Skin.HasSetting(RandomizeBackground)">RandomizeImages</include>
			<visible>![Player.HasVideo + !Skin.HasSetting(ShowBackgroundVideo)] | [Window.IsVisible(MovieInformation) + !Skin.HasSetting(HideWindowedTrailer)] | Window.IsActive(TVChannels)</visible>
		</control>
		<control type="visualisation">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<visible>Player.HasAudio + !Skin.HasSetting(ShowBackgroundVis) + !Window.IsVisible(TVChannels) + !Window.IsVisible(RadioChannels)</visible>
			<visible>String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
		</control>
		<control type="image">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<texture colordiffuse="black">backgrounds/white.png</texture>
			<visible>Player.HasVideo + !Skin.HasSetting(ShowBackgroundVideo) + !Window.IsVisible(TVChannels) + !Window.IsVisible(RadioChannels)</visible>
			<visible>![Window.IsVisible(MovieInformation) + !Skin.HasSetting(HideWindowedTrailer)]</visible>
		</control>
		<control type="videowindow">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<visible>Player.HasVideo + !Skin.HasSetting(ShowBackgroundVideo) + !Window.IsVisible(TVChannels) + !Window.IsVisible(RadioChannels)</visible>
			<visible>![Window.IsVisible(MovieInformation) + !Skin.HasSetting(HideWindowedTrailer)]</visible>
		</control>
		<control type="image">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<aspectratio>scale</aspectratio>
			<texture background="true" colordiffuse="bg.overlay">backgrounds/white.png</texture>
			<include>backgroundfade</include>
			<include>Window_OpenClose_Animation</include>
		</control>
	</include>
	<include name="MaskedBackground">
		<include condition="![String.IsEqual(Skin.AspectRatio,4:3) | String.IsEqual(Skin.AspectRatio,3:2) | String.IsEqual(Skin.AspectRatio,16:10)]" content="DynamicMaskedBackground">
			<param name="diffuse-image" value="home-mask.png" />
		</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)" content="DynamicMaskedBackground">
			<param name="diffuse-image" value="home-mask-4-3.png" />
		</include>
		<include condition="String.IsEqual(Skin.AspectRatio,3:2)" content="DynamicMaskedBackground">
			<param name="diffuse-image" value="home-mask-3-2.png" />
		</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:10)" content="DynamicMaskedBackground">
			<param name="diffuse-image" value="home-mask-16-10.png" />
		</include>
	</include>
	<include name="DynamicMaskedBackground">
		<param name="diffuse-image" default="home-mask.png" />
		<definition>
			<control type="group">
				<animation effect="fade" time="0" delay="300">VisibleChange</animation>
				<animation effect="fade" time="0" delay="300">WindowOpen</animation>
				<animation effect="fade" time="0" delay="300">WindowClose</animation>
				<visible>![Player.HasVideo + !Skin.HasSetting(ShowBackgroundVideo)] | [Window.IsVisible(MovieInformation) + !Skin.HasSetting(HideWindowedTrailer)] | Window.IsActive(TVChannels)</visible>
				<control type="multiimage">
					<left>0</left>
					<top>0</top>
					<width>100%</width>
					<height>100%</height>
					<imagepath background="true" diffuse="backgrounds/$PARAM[diffuse-image]" fallback="special://skin/extras/backgrounds/SKINDEFAULT.jpg">$VAR[BackgroundVar]</imagepath>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<fadetime>450</fadetime>
					<loop>yes</loop>
					<include>fanartSpeed</include>
					<include condition="Skin.HasSetting(RandomizeBackground)">RandomizeImages</include>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>100%</width>
					<height>100%</height>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture background="true" diffuse="backgrounds/$PARAM[diffuse-image]" colordiffuse="bg.overlay">backgrounds/white.png</texture>
				</control>
			</control>
		</definition>
	</include>
</includes>